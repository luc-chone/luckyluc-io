{
	"compilerOptions": {
		// For browser client, we target edge and above, so es6 (i.e., es2015) is safe. (for ie11 and safari9, es5 should be the target)
		"target": "es2015",
		// We will target only browsers that support ES2015 modules (i.e., import ...)
		"module": "commonjs",

		// 99% of the code will be .ts, and .js files will just be module glue and does not need to be processed by typescript (keep the glue small)
		"allowJs": false,
		"checkJs": false,

		// Definitely wants sourcemapp
		"sourceMap": true, /* Generates corresponding '.map' file. */

		// This is just to check the code once in a while to check the tsc output with a raw "ts". 
		// "npm run build" will use rollup and does not need the .js to be emitted.
		"outDir": "./scripts/~out", /* Redirect output structure to the directory. */

		// We point the root dir to the parent to include eventual ../common/ (and we will exclude other .ts dirs, like eventual server/)
		"rootDir": "./scripts/",

		// To extract the maximum value from TypeScript, we use strict = true (no implicit, null check, ...)
		"strict": true, 

		// This is important to support 3rd party modules that are still in a node.js/commonjs way
		"moduleResolution": "node", 

		"baseUrl": "./src/",
    "paths": {
      "other": ["./src/patch.ts"]
		},

		// allow to import moment like: import moment from "moment"
		"allowSyntheticDefaultImports": true
	},
	"files": [
		"./node_modules/@types/p5/lib/addons/p5.dom.d.ts",
	],
	// We want more control about which code we will compile and exclude
	"include": [
		"./scripts/**/*.ts"
	],

	"exclude": [
		"node_modules",
		"server", // we exclude server
		".rpt2_cache" // this folder will be created by the rollup-typescript2, so, need to exlude it, can become confusing.
	]
}